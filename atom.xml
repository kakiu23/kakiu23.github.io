<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Q鸽博客</title>
  
  <subtitle>Stay Hungry Stay Foolish</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-09-26T02:49:18.964Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Q鸽</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Centos8安装Docker</title>
    <link href="http://example.com/2020/09/25/Centos8%E5%AE%89%E8%A3%85Docker/"/>
    <id>http://example.com/2020/09/25/Centos8%E5%AE%89%E8%A3%85Docker/</id>
    <published>2020-09-25T05:24:36.000Z</published>
    <updated>2020-09-26T02:49:18.964Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a>0.前言</h1><p>Centos8默认使用了Podman代替了Docker,被称为下一代容器技术，但现在市面上还是使用Docker的比较多。Docker官方推荐的Linux的系统是Ubuntu的，生产环境建议安装在Ubuntu上，性能会好点。由于我的电脑只安装了Centos8，所以我就在Centos8下演示如何安装Docker。</p><h1 id="1-开始安装"><a href="#1-开始安装" class="headerlink" title="1.开始安装"></a>1.开始安装</h1><ul><li><p>先安装yum-utils包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install -y yum-utils</span><br></pre></td></tr></table></figure><p>看到如下图所示的<strong>Complete！</strong>表示安装成功</p></li></ul><img src="/images/Centos8安装docker/image-20200925140551493.png" alt="image-20200925140551493" style="zoom:50%;" /><ul><li><p>设置Docker仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>这时遇到了一个错误：<img src="/images/Centos8%E5%AE%89%E8%A3%85docker/image-20200925174856466.png" alt="image-20200925174856466"></p></li></ul><p><strong>解决办法</strong>：升级网络安全服务即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum update nss</span><br></pre></td></tr></table></figure><p>再执行刚才的命令：<img src="/images/Centos8%E5%AE%89%E8%A3%85docker/image-20200925175246455.png" alt="image-20200925175246455"></p><p>没有出现报错证明安装成功</p><ul><li><p>安装Docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install docker-ce docker-ce-cli containerd.io --nobest</span><br></pre></td></tr></table></figure><p>这时又出现了一个错误：<img src="/images/Centos8安装docker/image-20200925213802731.png" alt="image-20200925213802731" style="zoom:50%;" /></p></li></ul><p>这应该是防火墙没有允许443端口通过，我们先看防火墙端口列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure><p><img src="/images/Centos8%E5%AE%89%E8%A3%85docker/image-20200925221357023.png" alt="image-20200925221357023"></p><p>发现防火墙白名单没有443端口，下面我们设置一下让防火墙允许443端口通过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --zone=public --add-port=443/tcp --permanent</span><br></pre></td></tr></table></figure><p>执行以下命令使配置立即生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --reload </span><br></pre></td></tr></table></figure><p>再执行安装Docker的命令:<img src="/images/Centos8%E5%AE%89%E8%A3%85docker/image-20200925233441937.png" alt="image-20200925233441937"></p><p>看到Complete就证明安装成功了</p><h1 id="2-启动测试Docker容器"><a href="#2-启动测试Docker容器" class="headerlink" title="2.启动测试Docker容器"></a>2.启动测试Docker容器</h1><ul><li><p>先设置ustc镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkdir /etc/docker  //创建Docker配置目录</span><br><span class="line">$ sudo vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>在该文件中输入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>启动Docker容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl start docker //启动Docker</span><br><span class="line">$ sudo systemctl status docker //查看Docker容器运行状态</span><br></pre></td></tr></table></figure><img src="/images/Centos8安装docker/image-20200926104911873.png" alt="image-20200926104911873" style="zoom:50%;" /></li></ul><p>Docker常用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl stop docker //停止Docker</span><br><span class="line">$ sudo systemctl <span class="built_in">enable</span> docker //开机启动Docker</span><br><span class="line">$ sudo docker info //查看Docker信息</span><br><span class="line">$ sudo docker images //查看Docker本地镜像文件信息</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0-前言&quot;&gt;&lt;a href=&quot;#0-前言&quot; class=&quot;headerlink&quot; title=&quot;0.前言&quot;&gt;&lt;/a&gt;0.前言&lt;/h1&gt;&lt;p&gt;Centos8默认使用了Podman代替了Docker,被称为下一代容器技术，但现在市面上还是使用Docker的比较多。Do</summary>
      
    
    
    
    
    <category term="Docker" scheme="http://example.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github免费搭建个人博客</title>
    <link href="http://example.com/2020/09/21/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>http://example.com/2020/09/21/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</id>
    <published>2020-09-21T06:08:40.000Z</published>
    <updated>2020-09-25T02:37:55.791Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Github免费搭建个人博客"><a href="#Hexo-Github免费搭建个人博客" class="headerlink" title="Hexo+Github免费搭建个人博客"></a>Hexo+Github免费搭建个人博客</h1><h2 id="1-安装node-js"><a href="#1-安装node-js" class="headerlink" title="1.安装node.js"></a>1.安装node.js</h2><ul><li><p>打开node.js中文网(<a href="http://nodejs.cn/download/),%E6%A0%B9%E6%8D%AE%E8%87%AA%E5%B7%B1%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B8%8B%E8%BD%BD%E7%9B%B8%E5%AF%B9%E5%BA%94%E7%9A%84%E5%AE%89%E8%A3%85%E5%8C%85">http://nodejs.cn/download/),根据自己的操作系统下载相对应的安装包</a></p></li><li><p>下载完成后双击安装包进行安装</p></li></ul><img src="/images/test/image-20200922160749679.png" alt="image-20200922160749679" style="zoom:50%;" /><p>打开终端输入node -v 和npm -v</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure><img src="/images/test/image-20200922161627433.png" alt="image-20200922161627433" style="zoom:50%;" /><p>能看到版本号就说明安装成功了！</p><h2 id="2-安装hexo"><a href="#2-安装hexo" class="headerlink" title="2.安装hexo"></a>2.安装hexo</h2><ul><li>安装hexo</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo -i  //切换管理员</span><br><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure><ul><li>检查是否安装成功</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure><ul><li>能看到以下的信息就证明安装成功了</li></ul><img src="/images/test/image-20200922161644391.png" alt="image-20200922161644391" style="zoom:50%;" /><ul><li><p>如果你没有科学上网的环境，用npm安装还是挺慢的。那么可以先安装cnpm，然后再安装hexo</p></li><li><p>先安装cnpm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li><p>再安装hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install -g hexo </span><br></pre></td></tr></table></figure></li></ul><h2 id="3-初始化hexo"><a href="#3-初始化hexo" class="headerlink" title="3.初始化hexo"></a>3.初始化hexo</h2><ul><li><p>初始化hexo博客</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br></pre></td></tr></table></figure><img src="/images/test/image-20200922161744907.png" alt="image-20200922161744907" style="zoom:50%;" /></li></ul><ul><li><p>切换blog目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> blog</span><br></pre></td></tr></table></figure></li><li><p>启动hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></li></ul><p><img src="/images/test/image-20200922161754633.png" alt="image-20200922161754633"></p><ul><li><p>在浏览器输入：<a href="http://localhost:4000/">http://localhost:4000</a></p></li><li><p>能看到这个页面就证明初始化成功了</p><p><img src="/images/test/image-20200922161805338.png" alt="image-20200922161805338"></p></li></ul><h2 id="4-部署到GitHub上"><a href="#4-部署到GitHub上" class="headerlink" title="4.部署到GitHub上"></a>4.部署到GitHub上</h2><ul><li><p>打开GitHub，登录自己账号。在首页右上角新建一个新仓库</p><p><img src="/images/test/image-20200921162907062-0678549.png" alt="image-20200921162907062-0678549"></p></li><li><p>这里要特别==<strong>注意</strong>==，仓库命名必须是:==<strong>你的同户名.github.io</strong>==</p></li></ul><p><img src="/images/test/image-20200921162920329-0678549.png" alt="image-20200921162920329-0678549"></p><ul><li><p>在blog目录下安装git插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><img src="/images/test/image-20200922161917878.png" alt="image-20200922161917878" style="zoom:50%;" /></li><li><p>配置 _config.yml</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim _config.yml</span></span><br></pre></td></tr></table></figure><p>编辑deploy(==<strong>注意</strong>==：冒号后面有空格，这是yml格式规范)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span> </span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">https://github.com/kakiu23/kakiu23.github.io.git</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p><img src="/images/test/image-20200921222434166.png" alt="image-20200921222434166"></p><ul><li>保存退出</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wq!</span><br></pre></td></tr></table></figure><ul><li><p>部署到GitHub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><ul><li>输入GitHub用户名和密码</li></ul></li></ul><pre><code>&lt;img src=&quot;/images/test/image-20200921222750800.png&quot; alt=&quot;image-20200921222750800&quot; style=&quot;zoom:50%;&quot; /&gt;</code></pre><ul><li><p>部署成功我们打开GitHub仓库看看</p><p><img src="/images/test/image-20200921163020158-0678549.png" alt="image-20200921163020158-0678549"></p></li><li><p>能看到上面这些就是部署成功了，我们接着在浏览器输入<strong>仓库的名称</strong>就是访问了，我的仓库名称就是:kakiu23.github.io</p></li></ul><p><img src="/images/test/image-20200921163043998-0678549.png" alt="image-20200921163043998-0678549"></p><p>​    已经能通过仓库名正常访问了。</p><ul><li>到这里就基本安装完成了。</li></ul><h2 id="5-更换主题"><a href="#5-更换主题" class="headerlink" title="5.更换主题"></a>5.更换主题</h2><ul><li><p>上GitHub找自己喜欢主题，然后通过git clone到blog/themes目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly //下载主题</span><br><span class="line">$ npm i hexo-theme-butterfly  //安装主题</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>修改 _config.yml，修改你要换的主题名称</p><img src="/images/test/image-20200921163239630.png" alt="image-20200921163239630" style="zoom:50%;" /></li></ul><ul><li><p>重新生成发布</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean //清除</span><br><span class="line">$ hexo g     //重新生成</span><br><span class="line">$ hexo d     //部署</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>遇到的问题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">修改主题后启动如果报如下错误：</span><br><span class="line"><span class="keyword">extends</span> includes/layout.pug block content <span class="keyword">include</span> includes/recent-posts.pug <span class="keyword">include</span> includes/partial</span><br></pre></td></tr></table></figure><ul><li><p>解决办法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">则执行如下命令可解决：</span><br><span class="line">npm install --save hexo-renderer-jade hexo-<span class="built_in">generator</span>-feed hexo-<span class="built_in">generator</span>-sitemap hexo-browsersync hexo-<span class="built_in">generator</span>-archive</span><br></pre></td></tr></table></figure></li></ul></li><li><p>重新清除缓存，生成，发布；效果如下</p><p><img src="/images/test/image-20200921163254391-0698691.png" alt="image-20200921163254391"></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hexo-Github免费搭建个人博客&quot;&gt;&lt;a href=&quot;#Hexo-Github免费搭建个人博客&quot; class=&quot;headerlink&quot; title=&quot;Hexo+Github免费搭建个人博客&quot;&gt;&lt;/a&gt;Hexo+Github免费搭建个人博客&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    
    <category term="个人博客搭建" scheme="http://example.com/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
